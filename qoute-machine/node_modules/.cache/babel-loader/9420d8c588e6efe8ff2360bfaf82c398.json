{"ast":null,"code":"import { createAction } from \"../functions/createAction\";\nimport { createAsyncAction } from \"../functions/createAsyncAction\";\nimport { randomQouetsUrl } from \"../urls\";\nvar setQoutes = createAction({\n  name: \"SET_QOUTES\",\n  payload: [\"qoutes\"]\n});\nvar initQoutes = createAsyncAction({\n  qoutes: setQoutes\n}, function (_ref) {\n  var dispatch = _ref.dispatch,\n      actions = _ref.actions;\n  fetch(randomQouetsUrl).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    console.log(response.qoutes);\n    return response.qoutes;\n  }).then(function (response) {\n    dispatch(actions.qoutes({\n      qoutes: 2\n    }));\n  });\n});\nexport { setQoutes, initQoutes };","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\qoute-machine\\src\\store\\actions.js"],"names":["createAction","createAsyncAction","randomQouetsUrl","setQoutes","name","payload","initQoutes","qoutes","dispatch","actions","fetch","then","response","json","console","log"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,SAAS,GAAGH,YAAY,CAAC;AAC3BI,EAAAA,IAAI,EAAE,YADqB;AAE3BC,EAAAA,OAAO,EAAE,CACL,QADK;AAFkB,CAAD,CAA9B;AAOA,IAAMC,UAAU,GAAGL,iBAAiB,CAAC;AACjCM,EAAAA,MAAM,EAAEJ;AADyB,CAAD,EAGpC,gBAAyB;AAAA,MAAvBK,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,OAAa,QAAbA,OAAa;AACrBC,EAAAA,KAAK,CAACR,eAAD,CAAL,CACKS,IADL,CACU,UAAAC,QAAQ;AAAA,WACVA,QAAQ,CAACC,IAAT,EADU;AAAA,GADlB,EAIKF,IAJL,CAIU,UAAAC,QAAQ,EAAK;AACfE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACL,MAArB;AACA,WAAOK,QAAQ,CAACL,MAAhB;AACH,GAPL,EAQKI,IARL,CAQU,UAAAC,QAAQ,EAAI;AAEdJ,IAAAA,QAAQ,CACJC,OAAO,CAACF,MAAR,CAAe;AACXA,MAAAA,MAAM,EAAE;AADG,KAAf,CADI,CAAR;AAKH,GAfL;AAgBH,CApBmC,CAApC;AAsBA,SAAQJ,SAAR,EAAmBG,UAAnB","sourcesContent":["import { createAction } from \"../functions/createAction\";\r\nimport { createAsyncAction } from \"../functions/createAsyncAction\";\r\nimport { randomQouetsUrl } from \"../urls\";\r\n\r\nconst setQoutes = createAction({\r\n    name: \"SET_QOUTES\",\r\n    payload: [\r\n        \"qoutes\"\r\n    ]\r\n});\r\n\r\nconst initQoutes = createAsyncAction({\r\n    qoutes: setQoutes\r\n},\r\n({dispatch, actions}) => {\r\n    fetch(randomQouetsUrl)\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then(response =>  {\r\n            console.log(response.qoutes);\r\n            return response.qoutes;   \r\n        })\r\n        .then(response => {\r\n            \r\n            dispatch(\r\n                actions.qoutes({\r\n                    qoutes: 2\r\n                })\r\n            );\r\n        })\r\n});\r\n\r\nexport {setQoutes, initQoutes};"]},"metadata":{},"sourceType":"module"}