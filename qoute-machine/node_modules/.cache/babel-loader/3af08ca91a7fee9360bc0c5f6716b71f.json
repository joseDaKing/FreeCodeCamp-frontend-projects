{"ast":null,"code":"import { setQoutes, selectRandomQoute } from \"../actions\";\nimport { concatArrays, concatObjects, removeDubplicatesInArray, copyArray, randomNumber } from \"../../utilities\";\nvar initState = {\n  currentQoute: 0\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case selectRandomQoute.getName:\n      return concatObjects(state, {\n        currentQoute: copyArray(action.qoutes)[randomNumber({\n          min: 0,\n          max: action.qoutesAmount - 1\n        })]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\qoute-machine\\src\\store\\reducers\\selectRandomQoute.js"],"names":["setQoutes","selectRandomQoute","concatArrays","concatObjects","removeDubplicatesInArray","copyArray","randomNumber","initState","currentQoute","reducer","state","action","type","getName","qoutes","min","max","qoutesAmount"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,iBAAnB,QAA2C,YAA3C;AAEA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,wBAHJ,EAIIC,SAJJ,EAKIC,YALJ,QAOK,iBAPL;AASA,IAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE;AADA,CAAlB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,iBAAiB,CAACY,OAAvB;AACI,aAAOV,aAAa,CAACO,KAAD,EAAQ;AACxBF,QAAAA,YAAY,EACZH,SAAS,CAACM,MAAM,CAACG,MAAR,CAAT,CACIR,YAAY,CAAC;AACTS,UAAAA,GAAG,EAAE,CADI;AAETC,UAAAA,GAAG,EAAEL,MAAM,CAACM,YAAP,GAAsB;AAFlB,SAAD,CADhB;AAFwB,OAAR,CAApB;;AAUJ;AACI,aAAOP,KAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["import {setQoutes, selectRandomQoute} from \"../actions\";\r\n\r\nimport {\r\n    concatArrays, \r\n    concatObjects,\r\n    removeDubplicatesInArray,\r\n    copyArray,\r\n    randomNumber\r\n} \r\nfrom \"../../utilities\";\r\n\r\nconst initState = {\r\n    currentQoute: 0 \r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case selectRandomQoute.getName:\r\n            return concatObjects(state, {\r\n                currentQoute: \r\n                copyArray(action.qoutes)[\r\n                    randomNumber({\r\n                        min: 0,\r\n                        max: action.qoutesAmount - 1\r\n                    })\r\n                ]\r\n            })\r\n\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}