{"ast":null,"code":"import { createAction } from \"../functions/createAction\";\nimport { createAsyncAction } from \"../functions/createAsyncAction\";\nimport { randomQouetsUrl } from \"../urls\";\nvar setQoutes = createAction({\n  name: \"SET_QOUTES\",\n  payload: [\"qoutes\"]\n});\nvar selectRandomQoute = createAction({\n  name: \"SELECT_RANDOM_QOUTE\",\n  payload: [\"qoutesAmount\", \"qoutes\"]\n});\nvar initQoutes = createAsyncAction({\n  qoutes: setQoutes,\n  selectRandom: selectRandomQoute\n}, function (_ref) {\n  var dispatch = _ref.dispatch,\n      actions = _ref.actions,\n      prevState = _ref.prevState;\n  fetch(randomQouetsUrl).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.quotes;\n  }).then(function (transFormedData) {\n    dispatch(actions.qoutes({\n      qoutes: transFormedData\n    }));\n    dispatch(actions.selectRandom({\n      qoutesAmount: prevState.qoutesAmount,\n      qoutes: prevState.qoutes\n    }));\n  });\n});\nconsole.log(initQoutes);\nexport { setQoutes, initQoutes, selectRandomQoute };","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\qoute-machine\\src\\store\\actions.js"],"names":["createAction","createAsyncAction","randomQouetsUrl","setQoutes","name","payload","selectRandomQoute","initQoutes","qoutes","selectRandom","dispatch","actions","prevState","fetch","then","response","json","data","quotes","transFormedData","qoutesAmount","console","log"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,SAAS,GAAGH,YAAY,CAAC;AAC3BI,EAAAA,IAAI,EAAE,YADqB;AAE3BC,EAAAA,OAAO,EAAE,CACL,QADK;AAFkB,CAAD,CAA9B;AAOA,IAAMC,iBAAiB,GAAGN,YAAY,CAAC;AACnCI,EAAAA,IAAI,EAAE,qBAD6B;AAEnCC,EAAAA,OAAO,EAAE,CACL,cADK,EAEL,QAFK;AAF0B,CAAD,CAAtC;AAQA,IAAME,UAAU,GAAGN,iBAAiB,CAAC;AACjCO,EAAAA,MAAM,EAAEL,SADyB;AAEjCM,EAAAA,YAAY,EAAEH;AAFmB,CAAD,EAIpC,gBAAoC;AAAA,MAAlCI,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAChCC,EAAAA,KAAK,CAACX,eAAD,CAAL,CACKY,IADL,CACU,UAAAC,QAAQ;AAAA,WACVA,QAAQ,CAACC,IAAT,EADU;AAAA,GADlB,EAIKF,IAJL,CAIU,UAAAG,IAAI;AAAA,WACNA,IAAI,CAACC,MADC;AAAA,GAJd,EAOKJ,IAPL,CAOU,UAAAK,eAAe,EAAI;AACrBT,IAAAA,QAAQ,CACJC,OAAO,CAACH,MAAR,CAAe;AACXA,MAAAA,MAAM,EAAEW;AADG,KAAf,CADI,CAAR;AAMAT,IAAAA,QAAQ,CACJC,OAAO,CAACF,YAAR,CAAqB;AACjBW,MAAAA,YAAY,EAAER,SAAS,CAACQ,YADP;AAEjBZ,MAAAA,MAAM,EAAEI,SAAS,CAACJ;AAFD,KAArB,CADI,CAAR;AAMH,GApBL;AAqBH,CA1BmC,CAApC;AA4BAa,OAAO,CAACC,GAAR,CAAYf,UAAZ;AAIA,SAAQJ,SAAR,EAAmBI,UAAnB,EAA+BD,iBAA/B","sourcesContent":["import { createAction } from \"../functions/createAction\";\r\nimport { createAsyncAction } from \"../functions/createAsyncAction\";\r\nimport { randomQouetsUrl } from \"../urls\";\r\n\r\nconst setQoutes = createAction({\r\n    name: \"SET_QOUTES\",\r\n    payload: [\r\n        \"qoutes\"\r\n    ]\r\n});\r\n\r\nconst selectRandomQoute = createAction({\r\n    name: \"SELECT_RANDOM_QOUTE\",\r\n    payload: [\r\n        \"qoutesAmount\",\r\n        \"qoutes\"\r\n    ]\r\n});\r\n\r\nconst initQoutes = createAsyncAction({\r\n    qoutes: setQoutes,\r\n    selectRandom: selectRandomQoute\r\n},\r\n({dispatch, actions, prevState}) => {\r\n    fetch(randomQouetsUrl)\r\n        .then(response => \r\n            response.json()\r\n        )\r\n        .then(data =>  (\r\n            data.quotes\r\n        ))\r\n        .then(transFormedData => {\r\n            dispatch(\r\n                actions.qoutes({\r\n                    qoutes: transFormedData\r\n                })\r\n            );\r\n\r\n            dispatch(\r\n                actions.selectRandom({\r\n                    qoutesAmount: prevState.qoutesAmount,\r\n                    qoutes: prevState.qoutes\r\n                })\r\n            );\r\n        })\r\n});\r\n\r\nconsole.log(initQoutes);\r\n\r\n\r\n\r\nexport {setQoutes, initQoutes, selectRandomQoute};"]},"metadata":{},"sourceType":"module"}