{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\qoute-machine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar createAsyncAction = function createAsyncAction(acitonsObj, fn) {\n  var actions = getActions(acitonsObj);\n  return function () {\n    return function (dispatch, prevState) {\n      fn({\n        actions: actions,\n        dispatch: dispatch,\n        prevState: prevState\n      });\n    };\n  };\n};\n\nfunction getActions(actions) {\n  return Object.entries(actions).reduce(function (obj, item) {\n    var _item = _slicedToArray(item, 2),\n        key = _item[0],\n        value = _item[1];\n\n    var getAction = value.getAction;\n    obj[key] = getAction;\n    return obj;\n  }, {});\n}\n\nexport { createAsyncAction };","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\qoute-machine\\src\\functions\\createAsyncAction.js"],"names":["createAsyncAction","acitonsObj","fn","actions","getActions","dispatch","prevState","Object","entries","reduce","obj","item","key","value","getAction"],"mappings":";;AAAA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAaC,EAAb,EAAoB;AAC1C,MAAMC,OAAO,GAAGC,UAAU,CAACH,UAAD,CAA1B;AAEA,SAAO;AAAA,WAAM,UAACI,QAAD,EAAWC,SAAX,EAAyB;AAClCJ,MAAAA,EAAE,CAAC;AACCC,QAAAA,OAAO,EAAEA,OADV;AAECE,QAAAA,QAAQ,EAAEA,QAFX;AAGCC,QAAAA,SAAS,EAAEA;AAHZ,OAAD,CAAF;AAKH,KANM;AAAA,GAAP;AAOH,CAVD;;AAYA,SAASF,UAAT,CAAoBD,OAApB,EAA6B;AACzB,SAAOI,MAAM,CAACC,OAAP,CAAeL,OAAf,EACFM,MADE,CACK,UAACC,GAAD,EAAMC,IAAN,EAAe;AAAA,+BACEA,IADF;AAAA,QACZC,GADY;AAAA,QACPC,KADO;;AAAA,QAEZC,SAFY,GAECD,KAFD,CAEZC,SAFY;AAGnBJ,IAAAA,GAAG,CAACE,GAAD,CAAH,GAAWE,SAAX;AACA,WAAOJ,GAAP;AACH,GANE,EAMA,EANA,CAAP;AAOH;;AAED,SAAQV,iBAAR","sourcesContent":["const createAsyncAction = (acitonsObj, fn) => {\r\n    const actions = getActions(acitonsObj);\r\n\r\n    return () => (dispatch, prevState) => {\r\n        fn({\r\n            actions: actions,\r\n            dispatch: dispatch,\r\n            prevState: prevState\r\n        })\r\n    };\r\n};\r\n\r\nfunction getActions(actions) {\r\n    return Object.entries(actions)\r\n        .reduce((obj, item) => {\r\n            const [key, value] = item;\r\n            const {getAction} = value;\r\n            obj[key] = getAction;\r\n            return obj;\r\n        }, {});\r\n}\r\n\r\nexport {createAsyncAction};"]},"metadata":{},"sourceType":"module"}