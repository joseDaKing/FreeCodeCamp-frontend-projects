{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\src\\\\components\\\\calculator.js\";\nimport React, { useState } from 'react';\nimport { Jumbotron, VerticalLine, Display, Button, Grid } from \"./bootstrap\";\nexport default (function (props) {\n  var layout = [7, 8, 9, \"/\", 4, 5, 6, \"X\", 1, 2, 3, \"-\", 0, \".\", \"=\", \"+\"];\n\n  var _useState = useState(\"asdasd\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var buttons = function buttons(value) {\n    var button;\n\n    if (!(value === \"=\")) {\n      button = React.createElement(Button, {\n        key: value,\n        name: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    } else {\n      button = React.createElement(Button, {\n        onClick: props.onClickEqual,\n        key: value,\n        name: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n\n    return button;\n  };\n\n  return React.createElement(Jumbotron, {\n    width: \"30rem\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.onClickDelete,\n    name: \"AC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(VerticalLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    columns: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, layout.map(buttons)));\n});","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\javascript-calculator\\src\\components\\calculator.js"],"names":["React","useState","Jumbotron","VerticalLine","Display","Button","Grid","props","layout","state","setState","buttons","value","button","onClickEqual","onClickDelete","map"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,QAGK,OAHL;AAKA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,IALJ,QAOK,aAPL;AASA,gBAAe,UAAAC,KAAK,EAAI;AACpB,MAAMC,MAAM,GAAG,CACX,CADW,EACP,CADO,EACF,CADE,EACE,GADF,EAEX,CAFW,EAEP,CAFO,EAEF,CAFE,EAEE,GAFF,EAGX,CAHW,EAGP,CAHO,EAGF,CAHE,EAGE,GAHF,EAIX,CAJW,EAIR,GAJQ,EAIH,GAJG,EAIE,GAJF,CAAf;;AADoB,kBAQIP,QAAQ,CAAC,QAAD,CARZ;AAAA;AAAA,MAQfQ,KARe;AAAA,MAQRC,QARQ;;AAUpB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrB,QAAIC,MAAJ;;AAEA,QAAI,EAAED,KAAK,KAAK,GAAZ,CAAJ,EAAsB;AAClBC,MAAAA,MAAM,GAAG,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAED,KAAb;AAAoB,QAAA,IAAI,EAAEA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH,KAFD,MAIK;AACDC,MAAAA,MAAM,GAAG,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,KAAK,CAACO,YAAvB;AAAqC,QAAA,GAAG,EAAEF,KAA1C;AAAiD,QAAA,IAAI,EAAEA,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH;;AAED,WAAOC,MAAP;AACH,GAZD;;AAcA,SACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,KAAK,CAACQ,aAAvB;AAAsC,IAAA,IAAI,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,MAAM,CAACQ,GAAP,CAAWL,OAAX,CADL,CAPJ,CADJ;AAcH,CAtCD","sourcesContent":["import React, {\r\n    useState\r\n} \r\nfrom 'react';\r\n\r\nimport {\r\n    Jumbotron,\r\n    VerticalLine,\r\n    Display,\r\n    Button,\r\n    Grid\r\n}\r\nfrom \"./bootstrap\";\r\n\r\nexport default props => {\r\n    const layout = [\r\n        7,  8,   9,  \"/\",\r\n        4,  5,   6,  \"X\",\r\n        1,  2,   3,  \"-\",\r\n        0, \".\", \"=\", \"+\"\r\n    ];\r\n\r\n    let [state, setState] = useState(\"asdasd\"); \r\n\r\n    const buttons = value => {\r\n        let button;\r\n\r\n        if (!(value === \"=\")) {\r\n            button = <Button key={value} name={value}/>;\r\n        }\r\n\r\n        else {\r\n            button = <Button onClick={props.onClickEqual} key={value} name={value}/>\r\n        }\r\n\r\n        return button;\r\n    }\r\n\r\n    return (\r\n        <Jumbotron width=\"30rem\" center>\r\n            <Display text={state}>\r\n                <Button onClick={props.onClickDelete} name=\"AC\"/>\r\n            </Display>\r\n            \r\n            <VerticalLine/>    \r\n            \r\n            <Grid columns={4}>\r\n                {layout.map(buttons)}\r\n            </Grid>\r\n        </Jumbotron>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}