{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\src\\\\components\\\\calculator.js\";\nimport React, { useState } from 'react';\nimport { Jumbotron, VerticalLine, Display, Button, Grid } from \"./bootstrap\";\nexport default (function (props) {\n  var layout = [7, 8, 9, \"/\", 4, 5, 6, \"X\", 1, 2, 3, \"-\", 0, \".\", \"=\", \"+\"];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var fn = function fn(value) {\n    var string = \"\".concat(state).concat(value);\n    string = \"\".concat(state).concat(value);\n    setState(string);\n  };\n\n  return React.createElement(Jumbotron, {\n    width: \"30rem\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.onClickDelete,\n    name: \"AC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(VerticalLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    columns: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, layout.map(buttons)));\n});\n\nfunction buttons(value) {\n  var button;\n\n  if (!(value === \"=\")) {\n    button = React.createElement(Button, {\n      onClick: function onClick() {\n        return fn(value);\n      },\n      key: value,\n      name: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  } else {\n    button = React.createElement(Button, {\n      onClick: props.onClickEqual,\n      key: value,\n      name: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  }\n\n  return button;\n}","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\javascript-calculator\\src\\components\\calculator.js"],"names":["React","useState","Jumbotron","VerticalLine","Display","Button","Grid","props","layout","state","setState","fn","value","string","onClickDelete","map","buttons","button","onClickEqual"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,QAGK,OAHL;AAKA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,IALJ,QAOK,aAPL;AASA,gBAAe,UAAAC,KAAK,EAAI;AACpB,MAAMC,MAAM,GAAG,CACX,CADW,EACP,CADO,EACF,CADE,EACE,GADF,EAEX,CAFW,EAEP,CAFO,EAEF,CAFE,EAEE,GAFF,EAGX,CAHW,EAGP,CAHO,EAGF,CAHE,EAGE,GAHF,EAIX,CAJW,EAIR,GAJQ,EAIH,GAJG,EAIE,GAJF,CAAf;;AADoB,kBAQIP,QAAQ,CAAC,EAAD,CARZ;AAAA;AAAA,MAQfQ,KARe;AAAA,MAQRC,QARQ;;AAYpB,MAAMC,EAAE,GAAG,SAALA,EAAK,CAAAC,KAAK,EAAI;AAChB,QAAIC,MAAM,aAAMJ,KAAN,SAAcG,KAAd,CAAV;AAEAC,IAAAA,MAAM,aAAMJ,KAAN,SAAcG,KAAd,CAAN;AAEAF,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACH,GAND;;AAQA,SACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,KAAK,CAACO,aAAvB;AAAsC,IAAA,IAAI,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,MAAM,CAACO,GAAP,CAAWC,OAAX,CADL,CAPJ,CADJ;AAaH,CAjCD;;AAmCA,SAASA,OAAT,CAAiBJ,KAAjB,EAAwB;AACpB,MAAIK,MAAJ;;AAEA,MAAI,EAAEL,KAAK,KAAK,GAAZ,CAAJ,EAAsB;AAClBK,IAAAA,MAAM,GAAG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMN,EAAE,CAACC,KAAD,CAAR;AAAA,OAAjB;AAAkC,MAAA,GAAG,EAAEA,KAAvC;AAA8C,MAAA,IAAI,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACH,GAFD,MAIK;AACDK,IAAAA,MAAM,GAAG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,KAAK,CAACW,YAAvB;AAAqC,MAAA,GAAG,EAAEN,KAA1C;AAAiD,MAAA,IAAI,EAAEA,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACH;;AAED,SAAOK,MAAP;AACH","sourcesContent":["import React, {\r\n    useState\r\n} \r\nfrom 'react';\r\n\r\nimport {\r\n    Jumbotron,\r\n    VerticalLine,\r\n    Display,\r\n    Button,\r\n    Grid\r\n}\r\nfrom \"./bootstrap\";\r\n\r\nexport default props => {\r\n    const layout = [\r\n        7,  8,   9,  \"/\",\r\n        4,  5,   6,  \"X\",\r\n        1,  2,   3,  \"-\",\r\n        0, \".\", \"=\", \"+\"\r\n    ];\r\n\r\n    let [state, setState] = useState(\"\"); \r\n\r\n \r\n\r\n    const fn = value => {\r\n        let string = `${state}${value}`;\r\n\r\n        string = `${state}${value}`;\r\n\r\n        setState(string);\r\n    }\r\n\r\n    return (\r\n        <Jumbotron width=\"30rem\" center>\r\n            <Display text={state}>\r\n                <Button onClick={props.onClickDelete} name=\"AC\"/>\r\n            </Display>\r\n            \r\n            <VerticalLine/>    \r\n            \r\n            <Grid columns={4}>\r\n                {layout.map(buttons)}\r\n            </Grid>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nfunction buttons(value) {\r\n    let button;\r\n\r\n    if (!(value === \"=\")) {\r\n        button = <Button onClick={() => fn(value)} key={value} name={value}/>;\r\n    }\r\n\r\n    else {\r\n        button = <Button onClick={props.onClickEqual} key={value} name={value}/>\r\n    }\r\n\r\n    return button;\r\n}"]},"metadata":{},"sourceType":"module"}