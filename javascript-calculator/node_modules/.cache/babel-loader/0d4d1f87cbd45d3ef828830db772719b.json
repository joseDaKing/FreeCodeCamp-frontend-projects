{"ast":null,"code":"import { onAddChar, onDelete, onEqual, onAddMath, onSubtractMath, onDivideMath, onMultipleMath } from \"./actions.js\";\nimport { concatObjects, copyObject } from \"../utilities\";\nimport { stat } from \"fs\";\nimport { parse } from \"path\";\nvar initState = {\n  displayString: \"\",\n  calcString: \"\",\n  value: 0,\n  isCalc: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case onDelete.getName:\n      return copyObject(initState);\n\n    case onEqual.getName:\n      return concatObjects(state, {\n        displayString: \"\".concat(state.displayString, \"=\").concat(state.value + parseInt(state.calcString)),\n        calcString: \"\".concat(state.value + parseInt(state.calcString)),\n        value: 0,\n        isCalc: true\n      });\n\n    case onAddChar.getName:\n      return concatObjects(state, {\n        calcString: state.calcString + calcStringValidation(action.char),\n        displayString: \"\".concat(state.displayString).concat(action.char)\n      });\n\n    case onAddMath.getName:\n      return concatObjects(state, {\n        calcString: \"\",\n        value: state.value + parseInt(state.calcString)\n      });\n\n    default:\n      return state;\n  }\n});\n\nfunction calcStringValidation(char) {\n  switch (char) {\n    case \"-\":\n    case \"+\":\n    case \"/\":\n    case \"X\":\n      return \"\";\n\n    default:\n      return char;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\javascript-calculator\\src\\store\\reducer.js"],"names":["onAddChar","onDelete","onEqual","onAddMath","onSubtractMath","onDivideMath","onMultipleMath","concatObjects","copyObject","stat","parse","initState","displayString","calcString","value","isCalc","state","action","type","getName","parseInt","calcStringValidation","char"],"mappings":"AAAA,SACIA,SADJ,EAEIC,QAFJ,EAGIC,OAHJ,EAIIC,SAJJ,EAKIC,cALJ,EAMIC,YANJ,EAOIC,cAPJ,QASK,cATL;AAWA,SACIC,aADJ,EAEIC,UAFJ,QAIK,cAJL;AAKA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,aAAa,EAAE,EADD;AAEdC,EAAAA,UAAU,EAAE,EAFE;AAGdC,EAAAA,KAAK,EAAE,CAHO;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAlB;AAOA,gBAAe,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,QAAQ,CAACkB,OAAd;AACI,aAAOX,UAAU,CAACG,SAAD,CAAjB;;AAEJ,SAAKT,OAAO,CAACiB,OAAb;AACI,aAAOZ,aAAa,CAACS,KAAD,EAAQ;AACxBJ,QAAAA,aAAa,YAAKI,KAAK,CAACJ,aAAX,cAA4BI,KAAK,CAACF,KAAN,GAAcM,QAAQ,CAACJ,KAAK,CAACH,UAAP,CAAlD,CADW;AAExBA,QAAAA,UAAU,YAAKG,KAAK,CAACF,KAAN,GAAcM,QAAQ,CAACJ,KAAK,CAACH,UAAP,CAA3B,CAFc;AAGxBC,QAAAA,KAAK,EAAE,CAHiB;AAIxBC,QAAAA,MAAM,EAAE;AAJgB,OAAR,CAApB;;AAOJ,SAAKf,SAAS,CAACmB,OAAf;AACI,aAAOZ,aAAa,CAACS,KAAD,EAAQ;AACxBH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBQ,oBAAoB,CAACJ,MAAM,CAACK,IAAR,CAD3B;AAExBV,QAAAA,aAAa,YAAKI,KAAK,CAACJ,aAAX,SAA2BK,MAAM,CAACK,IAAlC;AAFW,OAAR,CAApB;;AAKJ,SAAKnB,SAAS,CAACgB,OAAf;AACI,aAAOZ,aAAa,CAACS,KAAD,EAAQ;AACxBH,QAAAA,UAAU,EAAE,EADY;AAExBC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcM,QAAQ,CAACJ,KAAK,CAACH,UAAP;AAFL,OAAR,CAApB;;AAMJ;AACI,aAAOG,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,SAASK,oBAAT,CAA8BC,IAA9B,EAAoC;AAChC,UAAOA,IAAP;AACI,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOA,IAAP;AAPR;AASH","sourcesContent":["import {\r\n    onAddChar,\r\n    onDelete,\r\n    onEqual,\r\n    onAddMath,\r\n    onSubtractMath,\r\n    onDivideMath,\r\n    onMultipleMath\r\n}\r\nfrom \"./actions.js\";\r\n\r\nimport {\r\n    concatObjects,\r\n    copyObject,\r\n}\r\nfrom \"../utilities\";\r\nimport { stat } from \"fs\";\r\nimport { parse } from \"path\";\r\n\r\nconst initState = {\r\n    displayString: \"\",\r\n    calcString: \"\",\r\n    value: 0,\r\n    isCalc: false\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case onDelete.getName:\r\n            return copyObject(initState);\r\n\r\n        case onEqual.getName:\r\n            return concatObjects(state, {\r\n                displayString: `${state.displayString}=${state.value + parseInt(state.calcString)}`,\r\n                calcString: `${state.value + parseInt(state.calcString)}`,\r\n                value: 0,\r\n                isCalc: true\r\n            })\r\n\r\n        case onAddChar.getName: \r\n            return concatObjects(state, {\r\n                calcString: state.calcString + calcStringValidation(action.char),\r\n                displayString: `${state.displayString}${action.char}`\r\n            });\r\n\r\n        case onAddMath.getName:\r\n            return concatObjects(state, {\r\n                calcString: \"\",\r\n                value: state.value + parseInt(state.calcString)\r\n            });\r\n\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction calcStringValidation(char) {\r\n    switch(char) {\r\n        case \"-\":\r\n        case \"+\":\r\n        case \"/\":\r\n        case \"X\":\r\n            return \"\"\r\n        default:\r\n            return char;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}