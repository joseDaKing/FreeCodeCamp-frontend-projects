{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\src\\\\components\\\\calculator.js\";\nimport React, { useState } from 'react';\nimport { Jumbotron, VerticalLine, Display, Button, Grid } from \"./bootstrap\";\nimport { getLastItem } from \"../utilities\";\nexport default (function (props) {\n  var layout = [7, 8, 9, \"/\", 4, 5, 6, \"X\", 1, 2, 3, \"-\", 0, \".\", \"=\", \"+\"];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var switchCase = function switchCase(value, checkValues) {\n    var bool = false;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = checkValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var checkValue = _step.value;\n        bool = bool || checkValue === value;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return bool;\n  };\n\n  var changeState = function changeState(value) {\n    var lastCharOfState = getLastItem(state);\n    var isLastCharSpecial = switchCase(lastCharOfState, [\"/\", \"X\", \"-\", \"+\"]);\n    console.log(lastCharOfState, isLastCharSpecial);\n    var string = \"\".concat(state).concat(value);\n    string = \"\".concat(state).concat(value);\n    setState(string);\n  };\n\n  var buttons = function buttons(value) {\n    var button;\n\n    if (!(value === \"=\")) {\n      button = React.createElement(Button, {\n        onClick: function onClick() {\n          return changeState(value);\n        },\n        key: value,\n        name: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    } else {\n      button = React.createElement(Button, {\n        onClick: props.onClickEqual,\n        key: value,\n        name: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n\n    return button;\n  };\n\n  return React.createElement(Jumbotron, {\n    width: \"30rem\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.onClickDelete,\n    name: \"AC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(VerticalLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    columns: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, layout.map(buttons)));\n});","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\javascript-calculator\\src\\components\\calculator.js"],"names":["React","useState","Jumbotron","VerticalLine","Display","Button","Grid","getLastItem","props","layout","state","setState","switchCase","value","checkValues","bool","checkValue","changeState","lastCharOfState","isLastCharSpecial","console","log","string","buttons","button","onClickEqual","onClickDelete","map"],"mappings":"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","sourcesContent":["import React, {\r\n    useState\r\n} \r\nfrom 'react';\r\n\r\nimport {\r\n    Jumbotron,\r\n    VerticalLine,\r\n    Display,\r\n    Button,\r\n    Grid\r\n}\r\nfrom \"./bootstrap\";\r\n\r\nimport {\r\n    getLastItem\r\n}\r\nfrom \"../utilities\";\r\n\r\nexport default props => {\r\n    const layout = [\r\n        7,  8,   9,  \"/\",\r\n        4,  5,   6,  \"X\",\r\n        1,  2,   3,  \"-\",\r\n        0, \".\", \"=\", \"+\"\r\n    ];\r\n\r\n    let [state, setState] = useState(\"\"); \r\n\r\n    const switchCase = (value, checkValues) => {\r\n        let bool = false;\r\n\r\n        for (const checkValue of checkValues) {\r\n            bool = bool || (checkValue === value);\r\n        }\r\n\r\n        return bool\r\n    }\r\n\r\n    const changeState = value => {\r\n        const lastCharOfState = getLastItem(state);\r\n        \r\n        const isLastCharSpecial = switchCase(lastCharOfState, [\"/\", \"X\", \"-\", \"+\"]);\r\n\r\n        console.log(lastCharOfState, isLastCharSpecial);\r\n\r\n        let string = `${state}${value}`;\r\n\r\n        string = `${state}${value}`;\r\n\r\n        setState(string);\r\n    }\r\n\r\n    const buttons = value => {\r\n        let button;\r\n\r\n        if (!(value === \"=\")) {\r\n            button = <Button onClick={() => changeState(value)} key={value} name={value}/>;\r\n        }\r\n\r\n        else {\r\n            button = <Button onClick={props.onClickEqual} key={value} name={value}/>\r\n        }\r\n\r\n        return button;\r\n    }\r\n\r\n    return (\r\n        <Jumbotron width=\"30rem\" center>\r\n            <Display text={state}>\r\n                <Button onClick={props.onClickDelete} name=\"AC\"/>\r\n            </Display>\r\n            \r\n            <VerticalLine/>    \r\n            \r\n            <Grid columns={4}>\r\n                {layout.map(buttons)}\r\n            </Grid>\r\n        </Jumbotron>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}