{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\javascript-calculator\\\\src\\\\components\\\\calculator.js\";\nimport React from 'react';\nimport { Jumbotron, VerticalLine, Display, Button, Grid } from \"./bootstrap\";\nexport default React.forwardRef(function (props, ref) {\n  var layout = [7, 8, 9, \" / \", 4, 5, 6, \" X \", 1, 2, 3, \" - \", 0, \".\", \"=\", \" + \"];\n\n  var buttons = function buttons(value) {\n    var onClickString;\n\n    switch (value) {\n      case \"/\":\n        onClickString = \"Divide\";\n        break;\n\n      case \"X\":\n        onClickString = \"Multiple\";\n        break;\n\n      case \"-\":\n        onClickString = \"Subtract\";\n        break;\n\n      case \"+\":\n        onClickString = \"Add\";\n        break;\n\n      default:\n        onClickString = value;\n    }\n\n    return React.createElement(Button, {\n      key: value,\n      name: value,\n      onClick: props[\"onClick\".concat(onClickString)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Jumbotron, {\n    width: \"30rem\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: props.setDisplay,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.onClickDelete,\n    name: \"AC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(VerticalLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    columns: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, layout.map(buttons)));\n});","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\javascript-calculator\\src\\components\\calculator.js"],"names":["React","Jumbotron","VerticalLine","Display","Button","Grid","forwardRef","props","ref","layout","buttons","value","onClickString","setDisplay","onClickDelete","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,IALJ,QAOK,aAPL;AASA,eAAeL,KAAK,CAACM,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5C,MAAMC,MAAM,GAAG,CACX,CADW,EACP,CADO,EACF,CADE,EACE,KADF,EAEX,CAFW,EAEP,CAFO,EAEF,CAFE,EAEE,KAFF,EAGX,CAHW,EAGP,CAHO,EAGF,CAHE,EAGE,KAHF,EAIX,CAJW,EAIR,GAJQ,EAIH,GAJG,EAIE,KAJF,CAAf;;AAOA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrB,QAAIC,aAAJ;;AAEA,YAAOD,KAAP;AACI,WAAK,GAAL;AACIC,QAAAA,aAAa,GAAG,QAAhB;AACJ;;AAEA,WAAK,GAAL;AACIA,QAAAA,aAAa,GAAG,UAAhB;AACJ;;AAEA,WAAK,GAAL;AACIA,QAAAA,aAAa,GAAG,UAAhB;AACJ;;AAEA,WAAK,GAAL;AACIA,QAAAA,aAAa,GAAG,KAAhB;AACJ;;AAEA;AACIA,QAAAA,aAAa,GAAGD,KAAhB;AAlBR;;AAqBA,WAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,IAAI,EAAEA,KAA1B;AAAiC,MAAA,OAAO,EAAEJ,KAAK,kBAAWK,aAAX,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAzBD;;AA2BA,SACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEL,KAAK,CAACM,UAArB;AAAiC,IAAA,GAAG,EAAEL,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACO,aAAvB;AAAsC,IAAA,IAAI,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,MAAM,CAACM,GAAP,CAAWL,OAAX,CADL,CAPJ,CADJ;AAaH,CAhDc,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    Jumbotron,\r\n    VerticalLine,\r\n    Display,\r\n    Button,\r\n    Grid\r\n}\r\nfrom \"./bootstrap\";\r\n\r\nexport default React.forwardRef((props, ref) => {\r\n    const layout = [\r\n        7,  8,   9,  \" / \",\r\n        4,  5,   6,  \" X \",\r\n        1,  2,   3,  \" - \",\r\n        0, \".\", \"=\", \" + \"\r\n    ];\r\n\r\n    const buttons = value => {\r\n        let onClickString;\r\n\r\n        switch(value) {\r\n            case \"/\":\r\n                onClickString = \"Divide\";\r\n            break;\r\n            \r\n            case \"X\":\r\n                onClickString = \"Multiple\";\r\n            break;\r\n\r\n            case \"-\":\r\n                onClickString = \"Subtract\";\r\n            break;\r\n\r\n            case \"+\":\r\n                onClickString = \"Add\";\r\n            break;\r\n\r\n            default:\r\n                onClickString = value;\r\n        }   \r\n\r\n        return <Button key={value} name={value} onClick={props[`onClick${onClickString}`]}/>\r\n    }\r\n\r\n    return (\r\n        <Jumbotron width=\"30rem\" center>\r\n            <Display text={props.setDisplay} ref={ref}>\r\n                <Button onClick={props.onClickDelete} name=\"AC\"/>\r\n            </Display>\r\n            \r\n            <VerticalLine/>    \r\n            \r\n            <Grid columns={4}>\r\n                {layout.map(buttons)}\r\n            </Grid>\r\n        </Jumbotron>\r\n    );\r\n});"]},"metadata":{},"sourceType":"module"}