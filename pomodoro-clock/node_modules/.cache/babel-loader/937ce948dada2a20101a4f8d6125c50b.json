{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\pomodoro-clock\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pomodoro from \"./components/pomodoro\";\n\nfunction App() {\n  const timer = ({\n    timeOut,\n    startFn,\n    endFn,\n    intervalFn\n  }) => {\n    startFn = startFn ? startFn : null;\n    intervalFn = intervalFn ? intervalFn : function () {}();\n    endFn = endFn ? endFn : null; //At start\n\n    startFn(timeOut);\n    let currentTime = 0; //Between interval\n\n    const interval = setInterval(() => {\n      currentTime++;\n      intervalFn(currentTime, stop);\n    }, 1000); //At end\n\n    setTimeout(() => {\n      endFn(timeOut, stop());\n      stop();\n    }, timeOut); //Stop interval\n\n    function stop() {\n      clearInterval(interval);\n    }\n  };\n\n  timer({\n    timeOut: 5000,\n    startFn: timeOut => {\n      console.log(\"start\", timeOut);\n    },\n    endFn: timeOut => {\n      console.log(\"end\", timeOut);\n    },\n    intervalFn: (currentTime, stop) => {\n      console.log(currentTime);\n\n      if (currentTime === 3) {\n        stop();\n      }\n    }\n  });\n  return React.createElement(Pomodoro, {\n    onChangeBreakLength: () => console.log(1),\n    onChangeSessionLength: () => console.log(1),\n    onClickStart: () => console.log(1),\n    onClickStop: () => console.log(1),\n    onClickReset: () => console.log(1),\n    display: \"00:00:00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\pomodoro-clock\\src\\App.js"],"names":["React","Pomodoro","App","timer","timeOut","startFn","endFn","intervalFn","currentTime","interval","setInterval","stop","setTimeout","clearInterval","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,KAAK,GAAG,CAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,GAAD,KAA2C;AACvDF,IAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAY,IAA7B;AACAE,IAAAA,UAAU,GAAGA,UAAU,GAAGA,UAAH,GAAgB,YAAU,CAAE,CAAZ,EAAvC;AACAD,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAU,IAAvB,CAHuD,CAKvD;;AACAD,IAAAA,OAAO,CAACD,OAAD,CAAP;AAEA,QAAII,WAAW,GAAG,CAAlB,CARuD,CAUvD;;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,WAAW;AAEZD,MAAAA,UAAU,CAACC,WAAD,EAAcG,IAAd,CAAV;AACA,KAJ2B,EAIzB,IAJyB,CAA5B,CAXuD,CAiBvD;;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,KAAK,CAACF,OAAD,EAAUO,IAAI,EAAd,CAAL;AACAA,MAAAA,IAAI;AACL,KAHS,EAGPP,OAHO,CAAV,CAlBuD,CAuBvD;;AACA,aAASO,IAAT,GAAgB;AACdE,MAAAA,aAAa,CAACJ,QAAD,CAAb;AACD;AACF,GA3BD;;AA6BAN,EAAAA,KAAK,CAAC;AACJC,IAAAA,OAAO,EAAE,IADL;AAGJC,IAAAA,OAAO,EAAED,OAAO,IAAI;AAClBU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,OAArB;AACD,KALG;AAOJE,IAAAA,KAAK,EAAEF,OAAO,IAAI;AAChBU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBX,OAAnB;AACD,KATG;AAWJG,IAAAA,UAAU,EAAE,CAACC,WAAD,EAAcG,IAAd,KAAuB;AACjCG,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;;AAEA,UAAIA,WAAW,KAAK,CAApB,EAAuB;AACrBG,QAAAA,IAAI;AACL;AACF;AAjBG,GAAD,CAAL;AAuBA,SACE,oBAAC,QAAD;AACE,IAAA,mBAAmB,EAAE,MAAMG,OAAO,CAACC,GAAR,CAAY,CAAZ,CAD7B;AAEE,IAAA,qBAAqB,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CAF/B;AAIE,IAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CAJtB;AAKE,IAAA,WAAW,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CALrB;AAME,IAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CANtB;AAQE,IAAA,OAAO,EAAE,UARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD;;AAED,eAAeb,GAAf","sourcesContent":["import React from 'react';\n\nimport Pomodoro from \"./components/pomodoro\";\n\nfunction App() {\n  const timer = ({timeOut, startFn, endFn, intervalFn}) => {\n    startFn = startFn ? startFn: null;\n    intervalFn = intervalFn ? intervalFn: (function(){}());\n    endFn = endFn ? endFn: null; \n\n    //At start\n    startFn(timeOut);\n\n    let currentTime = 0;\n\n    //Between interval\n    const interval = setInterval(() => {\n      currentTime++;\n\n     intervalFn(currentTime, stop);\n    }, 1000)\n\n    //At end\n    setTimeout(() => {\n      endFn(timeOut, stop());\n      stop();\n    }, timeOut)\n\n    //Stop interval\n    function stop() {\n      clearInterval(interval);\n    }\n  }\n\n  timer({\n    timeOut: 5000,\n\n    startFn: timeOut => {\n      console.log(\"start\", timeOut);\n    },\n\n    endFn: timeOut => {\n      console.log(\"end\", timeOut)\n    },\n\n    intervalFn: (currentTime, stop) => {\n      console.log(currentTime);\n\n      if (currentTime === 3) {\n        stop();\n      }\n    }\n\n   \n  })\n\n\n  return (\n    <Pomodoro\n      onChangeBreakLength={() => console.log(1)}\n      onChangeSessionLength={() => console.log(1)}\n      \n      onClickStart={() => console.log(1)}\n      onClickStop={() => console.log(1)}\n      onClickReset={() => console.log(1)}\n\n      display={\"00:00:00\"}\n    />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}