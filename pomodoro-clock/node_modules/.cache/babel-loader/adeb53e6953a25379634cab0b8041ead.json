{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\pomodoro-clock\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pomodoro from \"./components/pomodoro\";\n\nfunction App() {\n  const timer = ({\n    time,\n    startFn,\n    endFn,\n    intervalFn\n  }) => {\n    startFn = startFn ? startFn : null;\n    intervalFn = intervalFn ? intervalFn : function () {}();\n    endFn = endFn ? endFn : null; //At start\n\n    startFn(time);\n    let currentTime = 0; //Between interval\n\n    const interval = setInterval(() => {\n      currentTime++;\n      intervalFn(currentTime, stop);\n    }, 1000); //At end\n\n    const timeout = setTimeout(() => {\n      endFn(time, stop());\n      stop();\n    }, timeOut); //Stop interval\n\n    function stop() {\n      clearInterval(interval);\n      clearTimeout();\n    }\n  };\n\n  timer({\n    timeOut: 5000,\n    startFn: timeOut => {\n      console.log(\"start\", timeOut);\n    },\n    endFn: timeOut => {\n      console.log(\"end\", timeOut);\n    },\n    intervalFn: (currentTime, stop) => {\n      console.log(currentTime);\n\n      if (currentTime === 3) {\n        stop();\n      }\n    }\n  });\n  return React.createElement(Pomodoro, {\n    onChangeBreakLength: () => console.log(1),\n    onChangeSessionLength: () => console.log(1),\n    onClickStart: () => console.log(1),\n    onClickStop: () => console.log(1),\n    onClickReset: () => console.log(1),\n    display: \"00:00:00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\pomodoro-clock\\src\\App.js"],"names":["React","Pomodoro","App","timer","time","startFn","endFn","intervalFn","currentTime","interval","setInterval","stop","timeout","setTimeout","timeOut","clearInterval","clearTimeout","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,KAAK,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,GAAD,KAAwC;AACpDF,IAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAY,IAA7B;AACAE,IAAAA,UAAU,GAAGA,UAAU,GAAGA,UAAH,GAAgB,YAAU,CAAE,CAAZ,EAAvC;AACAD,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAU,IAAvB,CAHoD,CAKpD;;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEA,QAAII,WAAW,GAAG,CAAlB,CARoD,CAUpD;;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,WAAW;AAEZD,MAAAA,UAAU,CAACC,WAAD,EAAcG,IAAd,CAAV;AACA,KAJ2B,EAIzB,IAJyB,CAA5B,CAXoD,CAiBpD;;AACA,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BP,MAAAA,KAAK,CAACF,IAAD,EAAOO,IAAI,EAAX,CAAL;AACAA,MAAAA,IAAI;AACL,KAHyB,EAGvBG,OAHuB,CAA1B,CAlBoD,CAuBpD;;AACA,aAASH,IAAT,GAAgB;AACdI,MAAAA,aAAa,CAACN,QAAD,CAAb;AACAO,MAAAA,YAAY;AACb;AACF,GA5BD;;AA8BAb,EAAAA,KAAK,CAAC;AACJW,IAAAA,OAAO,EAAE,IADL;AAGJT,IAAAA,OAAO,EAAES,OAAO,IAAI;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,OAArB;AACD,KALG;AAOJR,IAAAA,KAAK,EAAEQ,OAAO,IAAI;AAChBG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,OAAnB;AACD,KATG;AAWJP,IAAAA,UAAU,EAAE,CAACC,WAAD,EAAcG,IAAd,KAAuB;AACjCM,MAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;;AAEA,UAAIA,WAAW,KAAK,CAApB,EAAuB;AACrBG,QAAAA,IAAI;AACL;AACF;AAjBG,GAAD,CAAL;AAuBA,SACE,oBAAC,QAAD;AACE,IAAA,mBAAmB,EAAE,MAAMM,OAAO,CAACC,GAAR,CAAY,CAAZ,CAD7B;AAEE,IAAA,qBAAqB,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CAF/B;AAIE,IAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CAJtB;AAKE,IAAA,WAAW,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CALrB;AAME,IAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,CAAZ,CANtB;AAQE,IAAA,OAAO,EAAE,UARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD;;AAED,eAAehB,GAAf","sourcesContent":["import React from 'react';\n\nimport Pomodoro from \"./components/pomodoro\";\n\nfunction App() {\n  const timer = ({time, startFn, endFn, intervalFn}) => {\n    startFn = startFn ? startFn: null;\n    intervalFn = intervalFn ? intervalFn: (function(){}());\n    endFn = endFn ? endFn: null; \n\n    //At start\n    startFn(time);\n\n    let currentTime = 0;\n\n    //Between interval\n    const interval = setInterval(() => {\n      currentTime++;\n\n     intervalFn(currentTime, stop);\n    }, 1000)\n\n    //At end\n    const timeout = setTimeout(() => {\n      endFn(time, stop());\n      stop();\n    }, timeOut)\n\n    //Stop interval\n    function stop() {\n      clearInterval(interval);\n      clearTimeout()\n    }\n  }\n\n  timer({\n    timeOut: 5000,\n\n    startFn: timeOut => {\n      console.log(\"start\", timeOut);\n    },\n\n    endFn: timeOut => {\n      console.log(\"end\", timeOut)\n    },\n\n    intervalFn: (currentTime, stop) => {\n      console.log(currentTime);\n\n      if (currentTime === 3) {\n        stop();\n      }\n    }\n\n   \n  })\n\n\n  return (\n    <Pomodoro\n      onChangeBreakLength={() => console.log(1)}\n      onChangeSessionLength={() => console.log(1)}\n      \n      onClickStart={() => console.log(1)}\n      onClickStop={() => console.log(1)}\n      onClickReset={() => console.log(1)}\n\n      display={\"00:00:00\"}\n    />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}