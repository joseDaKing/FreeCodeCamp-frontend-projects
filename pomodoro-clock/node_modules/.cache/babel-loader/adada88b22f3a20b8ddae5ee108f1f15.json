{"ast":null,"code":"export default class {\n  constructor(time) {\n    this.time = time;\n\n    this.onStartFn = this.onEndFn = this.onIntervalFn = () => {};\n\n    this.remainingTime = time;\n    this.currentTime = 0;\n    this.isStarted = false;\n  }\n\n  onStart(fn) {\n    this.onStartFn = fn;\n    return this;\n  }\n\n  onInterval(fn) {\n    this.onIntervalFn = fn;\n    return this;\n  }\n\n  onEnd(fn) {\n    this.onEndFn = fn;\n    return this;\n  }\n\n  start() {\n    if (!this.isStarted) {\n      this.isStarted = true;\n      this.onStartFn();\n\n      if (this.remainingTime === 0) {\n        this.reset();\n      }\n\n      this.interval = setInterval(() => {\n        this.currentTime++;\n        this.onIntervalFn(this.remainingTime);\n        this.remainingTime = this.remainingTime - 1;\n      }, 1000);\n      this.timeout = setTimeout(() => {\n        this.onEndFn();\n        this.stop();\n        this.isStarted = false;\n      }, this.remainingTime * 1000);\n    }\n\n    return this;\n  }\n\n  stop() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    return this;\n  }\n\n  reset() {\n    this.remainingTime = this.time;\n    this.currentTime = 0;\n    this.isStarted = false;\n    this.stop();\n    return this;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\pomodoro-clock\\src\\utilities\\timer.js"],"names":["constructor","time","onStartFn","onEndFn","onIntervalFn","remainingTime","currentTime","isStarted","onStart","fn","onInterval","onEnd","start","reset","interval","setInterval","timeout","setTimeout","stop","clearInterval","clearTimeout"],"mappings":"AAAA,eAAe,MAAM;AACjBA,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;;AAEA,SAAKC,SAAL,GACA,KAAKC,OAAL,GACA,KAAKC,YAAL,GAAoB,MAAM,CAAE,CAF5B;;AAIA,SAAKC,aAAL,GAAqBJ,IAArB;AACA,SAAKK,WAAL,GAAmB,CAAnB;AAEA,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDC,EAAAA,OAAO,CAACC,EAAD,EAAK;AACR,SAAKP,SAAL,GAAiBO,EAAjB;AACA,WAAO,IAAP;AACH;;AAEDC,EAAAA,UAAU,CAACD,EAAD,EAAK;AACX,SAAKL,YAAL,GAAoBK,EAApB;AACA,WAAO,IAAP;AACH;;AAEDE,EAAAA,KAAK,CAACF,EAAD,EAAK;AACN,SAAKN,OAAL,GAAeM,EAAf;AACA,WAAO,IAAP;AACH;;AAEDG,EAAAA,KAAK,GAAG;AACJ,QAAI,CAAC,KAAKL,SAAV,EAAqB;AACjB,WAAKA,SAAL,GAAiB,IAAjB;AACA,WAAKL,SAAL;;AAEA,UAAI,KAAKG,aAAL,KAAuB,CAA3B,EAA8B;AAC1B,aAAKQ,KAAL;AACH;;AAED,WAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAC9B,aAAKT,WAAL;AACA,aAAKF,YAAL,CAAkB,KAAKC,aAAvB;AACA,aAAKA,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;AACH,OAJ0B,EAIxB,IAJwB,CAA3B;AAMA,WAAKW,OAAL,GAAeC,UAAU,CAAC,MAAM;AAC5B,aAAKd,OAAL;AACA,aAAKe,IAAL;AACA,aAAKX,SAAL,GAAiB,KAAjB;AACH,OAJwB,EAItB,KAAKF,aAAL,GAAqB,IAJC,CAAzB;AAKH;;AAED,WAAO,IAAP;AACH;;AAEDa,EAAAA,IAAI,GAAG;AACH,QAAI,KAAKJ,QAAT,EAAmB;AACfK,MAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACH;;AAED,QAAI,KAAKE,OAAT,EAAkB;AACdI,MAAAA,YAAY,CAAC,KAAKJ,OAAN,CAAZ;AACH;;AAED,WAAO,IAAP;AACH;;AAEDH,EAAAA,KAAK,GAAG;AACJ,SAAKR,aAAL,GAAqB,KAAKJ,IAA1B;AACA,SAAKK,WAAL,GAAmB,CAAnB;AAEA,SAAKC,SAAL,GAAiB,KAAjB;AAEA,SAAKW,IAAL;AAEA,WAAO,IAAP;AACH;;AA3EgB","sourcesContent":["export default class {\r\n    constructor(time) {\r\n        this.time = time;\r\n        \r\n        this.onStartFn = \r\n        this.onEndFn = \r\n        this.onIntervalFn = () => {};\r\n\r\n        this.remainingTime = time;\r\n        this.currentTime = 0;\r\n        \r\n        this.isStarted = false;\r\n    }\r\n\r\n    onStart(fn) {\r\n        this.onStartFn = fn;\r\n        return this;\r\n    }\r\n\r\n    onInterval(fn) {\r\n        this.onIntervalFn = fn;\r\n        return this;\r\n    }\r\n\r\n    onEnd(fn) {\r\n        this.onEndFn = fn;\r\n        return this;\r\n    }\r\n\r\n    start() {\r\n        if (!this.isStarted) {\r\n            this.isStarted = true;\r\n            this.onStartFn();\r\n\r\n            if (this.remainingTime === 0) {\r\n                this.reset();\r\n            }\r\n\r\n            this.interval = setInterval(() => {\r\n                this.currentTime++;\r\n                this.onIntervalFn(this.remainingTime);\r\n                this.remainingTime = this.remainingTime - 1;\r\n            }, 1000)\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.onEndFn();\r\n                this.stop();\r\n                this.isStarted = false; \r\n            }, this.remainingTime * 1000);\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    stop() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    reset() {\r\n        this.remainingTime = this.time;\r\n        this.currentTime = 0;\r\n        \r\n        this.isStarted = false;\r\n\r\n        this.stop();\r\n\r\n        return this;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}