{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\pomodoro-clock\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Pomodoro from \"./components/pomodoro\";\nimport Timer from \"./utilities/timer\";\nimport timeStringToSeconds from \"./utilities/timeStringToSeconds\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.breakTimer = new Timer();\n    this.sessionTimer = new Timer();\n\n    this.onChangeBreakhHandler = event => {\n      const seconds = timeStringToSeconds(event.target.value);\n      this.breakTimer.setTime(seconds);\n    };\n\n    this.onChangeSessionHandler = event => {\n      console.log(event);\n      const seconds = timeStringToSeconds(event.target.value);\n      this.sessionTimer.setTime(seconds);\n    };\n  }\n\n  componentDidMount() {\n    this.breakTimer.onStart(() => {\n      console.log(\"break timer start\");\n    }).onEnd(() => {\n      console.log(\"break timer end\");\n      this.sessionTimer.start();\n    }).onInterval(currentTime => {\n      console.log(\"break timer inervall: \", currentTime);\n    });\n    this.sessionTimer.onStart(() => {\n      console.log(\"session timer start\");\n    }).onEnd(() => {\n      console.log(\"session timer end\");\n      this.breakTimer.start();\n    }).onInterval(currentTime => {\n      console.log(\"session timer inervall: \", currentTime);\n    });\n  }\n\n  render() {\n    return React.createElement(Pomodoro, {\n      onChangeBreakLength: event => this.onChangeBreakhHandler(event),\n      onChangeSessionLength: event => this.onChangeSessionHandler(event),\n      onClickStart: () => this.sessionTimer.start(),\n      onClickStop: () => console.log(),\n      onClickReset: () => console.log(),\n      onClickContinue: () => console.log(),\n      indicator: \"session\",\n      display: \"00:00:00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\pomodoro-clock\\src\\App.js"],"names":["React","Component","Pomodoro","Timer","timeStringToSeconds","App","breakTimer","sessionTimer","onChangeBreakhHandler","event","seconds","target","value","setTime","onChangeSessionHandler","console","log","componentDidMount","onStart","onEnd","start","onInterval","currentTime","render"],"mappings":";AAAA,OAAOA,KAAP,IACEC,SADF,QAGK,OAHL;AAKA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,UAD0B,GACb,IAAIH,KAAJ,EADa;AAAA,SAE1BI,YAF0B,GAEX,IAAIJ,KAAJ,EAFW;;AAAA,SA8B1BK,qBA9B0B,GA8BFC,KAAK,IAAI;AAC/B,YAAMC,OAAO,GAAGN,mBAAmB,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAnC;AACA,WAAKN,UAAL,CAAgBO,OAAhB,CAAwBH,OAAxB;AACD,KAjCyB;;AAAA,SAmC1BI,sBAnC0B,GAmCDL,KAAK,IAAI;AAChCM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,YAAMC,OAAO,GAAGN,mBAAmB,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAnC;AACA,WAAKL,YAAL,CAAkBM,OAAlB,CAA0BH,OAA1B;AACD,KAvCyB;AAAA;;AAI1BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,UAAL,CACCY,OADD,CACS,MAAM;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAHD,EAICG,KAJD,CAIO,MAAM;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAKT,YAAL,CAAkBa,KAAlB;AACD,KAPD,EAQCC,UARD,CAQYC,WAAW,IAAI;AACzBP,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCM,WAAtC;AACD,KAVD;AAYA,SAAKf,YAAL,CACCW,OADD,CACS,MAAM;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAHD,EAICG,KAJD,CAIO,MAAM;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WAAKV,UAAL,CAAgBc,KAAhB;AACD,KAPD,EAQCC,UARD,CAQYC,WAAW,IAAI;AACzBP,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCM,WAAxC;AACD,KAVD;AAWD;;AAaDC,EAAAA,MAAM,GAAE;AAEN,WACE,oBAAC,QAAD;AACA,MAAA,mBAAmB,EAAEd,KAAK,IAAI,KAAKD,qBAAL,CAA2BC,KAA3B,CAD9B;AAEA,MAAA,qBAAqB,EAAEA,KAAK,IAAI,KAAKK,sBAAL,CAA4BL,KAA5B,CAFhC;AAIA,MAAA,YAAY,EAAE,MAAM,KAAKF,YAAL,CAAkBa,KAAlB,EAJpB;AAKA,MAAA,WAAW,EAAE,MAAML,OAAO,CAACC,GAAR,EALnB;AAMA,MAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,EANpB;AAOA,MAAA,eAAe,EAAE,MAAMD,OAAO,CAACC,GAAR,EAPvB;AASA,MAAA,SAAS,EAAC,SATV;AAUA,MAAA,OAAO,EAAE,UAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;;AAxDyB;;AA2D5B,eAAeX,GAAf","sourcesContent":["import React,{\n  Component\n} \nfrom 'react';\n\nimport Pomodoro from \"./components/pomodoro\";\nimport Timer from \"./utilities/timer\";\nimport timeStringToSeconds from \"./utilities/timeStringToSeconds\";\n\nclass App extends Component {\n  breakTimer = new Timer();\n  sessionTimer = new Timer();\n\n  componentDidMount() {\n    this.breakTimer\n    .onStart(() => {\n      console.log(\"break timer start\");\n    })\n    .onEnd(() => {\n      console.log(\"break timer end\")\n      this.sessionTimer.start();\n    })\n    .onInterval(currentTime => {\n      console.log(\"break timer inervall: \", currentTime);\n    });\n\n    this.sessionTimer\n    .onStart(() => {\n      console.log(\"session timer start\");\n    })\n    .onEnd(() => {\n      console.log(\"session timer end\")\n      this.breakTimer.start();\n    })\n    .onInterval(currentTime => {\n      console.log(\"session timer inervall: \", currentTime);\n    });\n  }\n\n  onChangeBreakhHandler = event => {\n    const seconds = timeStringToSeconds(event.target.value);\n    this.breakTimer.setTime(seconds);\n  }\n\n  onChangeSessionHandler = event => {\n    console.log(event);\n    const seconds = timeStringToSeconds(event.target.value);\n    this.sessionTimer.setTime(seconds);\n  }\n\n  render(){\n   \n    return (\n      <Pomodoro\n      onChangeBreakLength={event => this.onChangeBreakhHandler(event)}\n      onChangeSessionLength={event => this.onChangeSessionHandler(event)}\n      \n      onClickStart={() => this.sessionTimer.start()}\n      onClickStop={() => console.log()}\n      onClickReset={() => console.log()}\n      onClickContinue={() => console.log()}\n  \n      indicator=\"session\"\n      display={\"00:00:00\"}/>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}