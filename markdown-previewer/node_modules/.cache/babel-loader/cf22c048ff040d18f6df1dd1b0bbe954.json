{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\src\\\\components\\\\bootstrap\\\\title.js\";\nimport React from \"react\";\nimport { CssClasses, addColorTypeToCssClass, textPos } from \"../../utilities\";\n\nvar title = function title(props) {\n  var size = props.size;\n\n  if (!props.size) {\n    size = \"1\";\n  }\n\n  var textPosition = textPos(props.pos);\n  var classes = new CssClasses(\"h\".concat(size));\n  classes.addClass(textPosition);\n  addColorTypeToCssClass({\n    type: \"text\",\n    classes: classes,\n    props: props\n  });\n  return React.createElement(\"p\", {\n    className: classes.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default title;","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\markdown-previewer\\src\\components\\bootstrap\\title.js"],"names":["React","CssClasses","addColorTypeToCssClass","textPos","title","props","size","textPosition","pos","classes","addClass","type","toString","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,UADJ,EAEIC,sBAFJ,EAGIC,OAHJ,QAKK,iBALL;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACnB,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;;AAEA,MAAI,CAACD,KAAK,CAACC,IAAX,EAAiB;AACbA,IAAAA,IAAI,GAAG,GAAP;AACH;;AAED,MAAMC,YAAY,GAAGJ,OAAO,CAACE,KAAK,CAACG,GAAP,CAA5B;AAEA,MAAMC,OAAO,GAAG,IAAIR,UAAJ,YAAmBK,IAAnB,EAAhB;AAEAG,EAAAA,OAAO,CAACC,QAAR,CAAiBH,YAAjB;AAEAL,EAAAA,sBAAsB,CAAC;AACnBS,IAAAA,IAAI,EAAE,MADa;AAEnBF,IAAAA,OAAO,EAAEA,OAFU;AAGnBJ,IAAAA,KAAK,EAAEA;AAHY,GAAD,CAAtB;AAMA,SACI;AAAG,IAAA,SAAS,EAAEI,OAAO,CAACG,QAAR,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCP,KAAK,CAACQ,QAAzC,CADJ;AAGH,CAtBD;;AAwBA,eAAeT,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n    CssClasses,\r\n    addColorTypeToCssClass,\r\n    textPos\r\n} \r\nfrom \"../../utilities\";\r\n\r\nconst title = props => {\r\n    let size = props.size;\r\n\r\n    if (!props.size) {\r\n        size = \"1\";\r\n    }\r\n\r\n    const textPosition = textPos(props.pos);\r\n\r\n    const classes = new CssClasses(`h${size}`);\r\n    \r\n    classes.addClass(textPosition);\r\n\r\n    addColorTypeToCssClass({\r\n        type: \"text\",\r\n        classes: classes,\r\n        props: props\r\n    });\r\n\r\n    return (\r\n        <p className={classes.toString()}>{props.children}</p>\r\n    );\r\n}\r\n\r\nexport default title;"]},"metadata":{},"sourceType":"module"}