{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\src\\\\components\\\\bootstrap\\\\container.js\";\nimport React from \"react\";\nimport { CssClasses } from \"../../utilities\";\n\nvar container = function container(props) {\n  var classes = new CssClasses(\"container\", \"bg-dark\");\n\n  var a = _objectSpread({}, props);\n\n  delete a.children;\n  console.log(a);\n\n  if (props.fluid) {\n    classes.concatStringToClass(\"container\", \"fluid\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default container;","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\markdown-previewer\\src\\components\\bootstrap\\container.js"],"names":["React","CssClasses","container","props","classes","a","children","console","log","fluid","concatStringToClass","toString"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,QAGK,iBAHL;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvB,MAAMC,OAAO,GAAG,IAAIH,UAAJ,CAAe,WAAf,EAA4B,SAA5B,CAAhB;;AAEA,MAAMI,CAAC,qBAAOF,KAAP,CAAP;;AACA,SAAOE,CAAC,CAACC,QAAT;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;;AAEA,MAAIF,KAAK,CAACM,KAAV,EAAiB;AACbL,IAAAA,OAAO,CAACM,mBAAR,CAA4B,WAA5B,EAAyC,OAAzC;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACO,QAAR,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACG,QADX,CADJ;AAKH,CAjBD;;AAmBA,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n    CssClasses\r\n} \r\nfrom \"../../utilities\";\r\n\r\nconst container = props => {\r\n    const classes = new CssClasses(\"container\", \"bg-dark\");\r\n    \r\n    const a = {...props};\r\n    delete a.children;\r\n\r\n    console.log(a);\r\n\r\n    if (props.fluid) {\r\n        classes.concatStringToClass(\"container\", \"fluid\")\r\n    }\r\n\r\n    return (\r\n        <div className={classes.toString()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default container;"]},"metadata":{},"sourceType":"module"}