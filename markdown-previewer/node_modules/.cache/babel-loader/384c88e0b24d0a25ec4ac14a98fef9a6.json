{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { colorTypes } from \"./bootstrapColor\";\nexport var getColorType = function getColorType(props, type) {\n  var copiedProps = _objectSpread({}, props);\n\n  delete copiedProps.children;\n  var colorType = Object.keys(copiedProps).reduce(function (acc, prop) {\n    var bool = true;\n    var correctColorType;\n\n    for (var _colorType in colorTypes) {\n      var color = \"\".concat(type, \"-\").concat(_colorType);\n\n      if (color === prop) {\n        bool = false;\n      }\n    }\n\n    if (bool) {\n      acc.push(prop);\n      return acc;\n    } else {\n      return;\n    }\n  }, []);\n  console.log(colorType);\n};","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\markdown-previewer\\src\\utilities\\getColorType.js"],"names":["colorTypes","getColorType","props","type","copiedProps","children","colorType","Object","keys","reduce","acc","prop","bool","correctColorType","color","push","console","log"],"mappings":";AAAA,SACIA,UADJ,QAGK,kBAHL;AAKA,OAAO,IAAMC,YAAY,GAAI,SAAhBA,YAAgB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAC1C,MAAMC,WAAW,qBAAOF,KAAP,CAAjB;;AACA,SAAOE,WAAW,CAACC,QAAnB;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,MAAzB,CAAiC,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC9D,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,gBAAJ;;AAEA,SAAK,IAAMP,UAAX,IAAwBN,UAAxB,EAAoC;AAChC,UAAMc,KAAK,aAAMX,IAAN,cAAcG,UAAd,CAAX;;AAEA,UAAIQ,KAAK,KAAKH,IAAd,EAAoB;AAChBC,QAAAA,IAAI,GAAG,KAAP;AACH;AACJ;;AAED,QAAIA,IAAJ,EAAU;AACNF,MAAAA,GAAG,CAACK,IAAJ,CAASJ,IAAT;AACA,aAAOD,GAAP;AACH,KAHD,MAKK;AACD;AACH;AACJ,GApBiB,EAoBf,EApBe,CAAlB;AAsBAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEH,CA5BM","sourcesContent":["import  {\r\n    colorTypes\r\n} \r\nfrom \"./bootstrapColor\";\r\n\r\nexport const getColorType =  (props, type) => {\r\n    const copiedProps = {...props};\r\n    delete copiedProps.children;\r\n\r\n    const colorType = Object.keys(copiedProps).reduce( (acc, prop) => {\r\n        let bool = true;\r\n        let correctColorType\r\n\r\n        for (const colorType in colorTypes) {\r\n            const color = `${type}-${colorType}`;\r\n            \r\n            if (color === prop) {\r\n                bool = false;        \r\n            } \r\n        }\r\n\r\n        if (bool) {\r\n            acc.push(prop);\r\n            return acc;\r\n        }\r\n\r\n        else {\r\n            return \r\n        }\r\n    }, []);\r\n\r\n    console.log(colorType);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}