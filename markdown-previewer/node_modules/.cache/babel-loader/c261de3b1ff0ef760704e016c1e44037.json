{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport var getColorType = function getColorType(props, type) {\n  var copiedProps = _objectSpread({}, props);\n\n  delete copiedProps.children;\n  type = type.toLowerCase();\n  var colorType = Object.keys(copiedProps).reduce(function (acc, prop) {\n    if (prop.includes(type)) {\n      return prop;\n    } else {\n      acc.push(prop);\n      return acc;\n    }\n  });\n  /*\r\n  Object.keys(copiedProps).filter(\r\n      prop => prop.includes(type)\r\n  )[0];\r\n  */\n\n  var _colorType$split = colorType.split(\"-\"),\n      _colorType$split2 = _slicedToArray(_colorType$split, 2),\n      color = _colorType$split2[1];\n\n  return {\n    type: type,\n    color: color\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\markdown-previewer\\src\\utilities\\getColorType.js"],"names":["getColorType","props","type","copiedProps","children","toLowerCase","colorType","Object","keys","reduce","acc","prop","includes","push","split","color"],"mappings":";;AAAA,OAAO,IAAMA,YAAY,GAAI,SAAhBA,YAAgB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAC1C,MAAMC,WAAW,qBAAOF,KAAP,CAAjB;;AAEA,SAAOE,WAAW,CAACC,QAAnB;AAEAF,EAAAA,IAAI,GAAGA,IAAI,CAACG,WAAL,EAAP;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,MAAzB,CAAiC,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC9D,QAAIA,IAAI,CAACC,QAAL,CAAcV,IAAd,CAAJ,EAAyB;AACrB,aAAOS,IAAP;AACH,KAFD,MAIK;AACDD,MAAAA,GAAG,CAACG,IAAJ,CAASF,IAAT;AACA,aAAOD,GAAP;AACH;AACJ,GATiB,CAAlB;AAWA;;;;;;AAlB0C,yBAwBxBJ,SAAS,CAACQ,KAAV,CAAgB,GAAhB,CAxBwB;AAAA;AAAA,MAwBjCC,KAxBiC;;AA0B1C,SAAO;AACHb,IAAAA,IAAI,EAAEA,IADH;AAEHa,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CA9BM","sourcesContent":["export const getColorType =  (props, type) => {\r\n    const copiedProps = {...props};\r\n    \r\n    delete copiedProps.children;\r\n    \r\n    type = type.toLowerCase();\r\n\r\n    const colorType = Object.keys(copiedProps).reduce( (acc, prop) => {\r\n        if (prop.includes(type)) {\r\n            return prop;\r\n        }\r\n\r\n        else {\r\n            acc.push(prop);\r\n            return acc;\r\n        }\r\n    });\r\n\r\n    /*\r\n    Object.keys(copiedProps).filter(\r\n        prop => prop.includes(type)\r\n    )[0];\r\n    */\r\n\r\n    const [, color] = colorType.split(\"-\");\r\n\r\n    return {\r\n        type: type,\r\n        color: color\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}