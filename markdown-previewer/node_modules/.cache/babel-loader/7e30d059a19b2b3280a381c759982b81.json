{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Yousefs_Dator\\\\Desktop\\\\freecodecamp\\\\frontend\\\\markdown-previewer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nexport var CssClasses =\n/*#__PURE__*/\nfunction () {\n  function CssClasses() {\n    _classCallCheck(this, CssClasses);\n\n    for (var _len = arguments.length, cssClass = new Array(_len), _key = 0; _key < _len; _key++) {\n      cssClass[_key] = arguments[_key];\n    }\n\n    this.cssClasses = cssClass;\n  }\n\n  _createClass(CssClasses, [{\n    key: \"addClass\",\n    value: function addClass(cssClass) {\n      this.cssClasses.push(cssClass);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(cssClass) {\n      var index = this.cssClasses.indexOf(cssClass);\n      console.log(index);\n      console.log(this.cssClasses);\n      this.cssClasses.splice(index, 1);\n    }\n  }, {\n    key: \"concatStringToClass\",\n    value: function concatStringToClass(cssClass, concatString) {\n      var index = this.cssClasses.indexOf(cssClass);\n      this.cssClasses[index] += \"-\".concat(concatString);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.cssClasses.join(\" \");\n    }\n  }]);\n\n  return CssClasses;\n}();","map":{"version":3,"sources":["C:\\Users\\Yousefs_Dator\\Desktop\\freecodecamp\\frontend\\markdown-previewer\\src\\utilities\\cssClasses.js"],"names":["CssClasses","cssClass","cssClasses","push","index","indexOf","console","log","splice","concatString","join"],"mappings":";;AAAA,WACMA,UADN;AAAA;AAAA;AAEI,wBAAyB;AAAA;;AAAA,sCAAVC,QAAU;AAAVA,MAAAA,QAAU;AAAA;;AACrB,SAAKC,UAAL,GAAkBD,QAAlB;AACH;;AAJL;AAAA;AAAA,6BAMaA,QANb,EAMuB;AACf,WAAKC,UAAL,CAAgBC,IAAhB,CAAqBF,QAArB;AACH;AARL;AAAA;AAAA,gCAUgBA,QAVhB,EAU0B;AAClB,UAAMG,KAAK,GAAG,KAAKF,UAAL,CAAgBG,OAAhB,CAAwBJ,QAAxB,CAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,UAAjB;AACA,WAAKA,UAAL,CAAgBM,MAAhB,CAAuBJ,KAAvB,EAA8B,CAA9B;AACH;AAfL;AAAA;AAAA,wCAiBwBH,QAjBxB,EAiBkCQ,YAjBlC,EAiBgD;AACxC,UAAML,KAAK,GAAG,KAAKF,UAAL,CAAgBG,OAAhB,CAAwBJ,QAAxB,CAAd;AACA,WAAKC,UAAL,CAAgBE,KAAhB,gBAA8BK,YAA9B;AACH;AApBL;AAAA;AAAA,+BAsBe;AACP,aAAO,KAAKP,UAAL,CAAgBQ,IAAhB,CAAqB,GAArB,CAAP;AACH;AAxBL;;AAAA;AAAA","sourcesContent":["export \r\nclass CssClasses {\r\n    constructor(...cssClass) {\r\n        this.cssClasses = cssClass;\r\n    }\r\n    \r\n    addClass(cssClass) {\r\n        this.cssClasses.push(cssClass);\r\n    }\r\n\r\n    removeClass(cssClass) {\r\n        const index = this.cssClasses.indexOf(cssClass);\r\n        console.log(index);\r\n        console.log(this.cssClasses);\r\n        this.cssClasses.splice(index, 1);\r\n    }\r\n\r\n    concatStringToClass(cssClass, concatString) {\r\n        const index = this.cssClasses.indexOf(cssClass);\r\n        this.cssClasses[index] += `-${concatString}`;\r\n    }\r\n\r\n    toString() {\r\n        return this.cssClasses.join(\" \");\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}